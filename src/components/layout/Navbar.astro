---
import { Icon } from "astro-icon/components";
import { getRelativeLocaleUrl } from "astro:i18n";
import { useTranslations } from "../../i18n/utils";
import { languages } from "../../i18n/ui";

const currentLanguage = Astro.currentLocale || "es";
const translateOptions = useTranslations(
  currentLanguage as keyof typeof languages
);

const menuLinks = [
  {
    name: translateOptions("nav.about"),
    url: getRelativeLocaleUrl(currentLanguage, "about"),
  },
  {
    name: translateOptions("nav.services"),
    url: getRelativeLocaleUrl(currentLanguage, "services"),
  },
  {
    name: translateOptions("nav.contact"),
    url: getRelativeLocaleUrl(currentLanguage, "contact"),
  },
];
---

<header
  class="flex-col items-center"
  data-aos="fade-down"
  data-aos-duration="3000"
  data-aos-delay="6000"
>
  <!-- Desktop Navbar -->
  <nav
    class="hidden container mx-auto md:flex items-center justify-between py-4 px-6 md:px-0"
  >
    <div class="logo text-2xl font-bold text-black/85 flex items-center">
      <a href="./"><Icon name="logo" size={42} class="text-primary mr-2" /></a>
    </div>
    <ul class="hidden md:flex gap-5 text-black">
      {
        menuLinks.map((link) => (
          <li class="hover-underline flex items-center justify-center hover:bg-primary/10 px-2 transition-all duration-300 ease-in-out">
            <a
              href={link.url}
              class="hover:text-primary-dark font-semibold text-sm transition-alln duration-300 ease-in-out text-black/60"
            >
              {link.name}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<!-- Mobile Navbar -->
<nav
  class="container mx-auto flex md:hidden items-center justify-between py-4 px-6 md:px-0"
>
  <div class="logo text-lg font-bold text-black/85 flex items-center">
    <Icon name="logo" size={32} class="text-primary" />
  </div>
  <div id="menu-button" class="text-gray-500 cursor-pointer">
    <Icon name="mdi:menu" size={32} />
  </div>
</nav>

<aside
  class="bg-secondary/75 w-[75%] h-screen fixed top-0 right-0 z-10 md:hidden border-l border-secondary shadow-lg transform transition-transform duration-300 ease-in-out translate-x-full"
>
  <div
    class="flex-col items-center justify-between p-4 border-b border-secondary/5"
  >
    <div class="flex items-center justify-between">
      <div class="text-white/45 text-base font-black">MENÃš</div>
      <div
        id="close-button"
        class="text-white/45 hover:text-primary-dark transition duration-300 ease-in-out cursor-pointer"
      >
        <Icon name="mdi:close" size={32} />
      </div>
    </div>
    <div>
      <ul>
        <li><a href="#" class="text-white/75">Acerca de</a></li>
        <li><a href="#" class="text-white/75">Servicios</a></li>
        <li><a href="#" class="text-white/75">Contacto</a></li>
      </ul>
    </div>
  </div>
</aside>

<div
  id="overlay"
  class="w-full h-screen bg-white/65 backdrop-blur-xs fixed top-0 left-0 z-0 hidden transition-opacity duration-300 ease-in-out"
>
</div>

<script>
  const menuButton = document.querySelector("#menu-button");
  const closeButton = document.querySelector("#close-button");
  const asideMenu = document.querySelector("aside");
  const overlay = document.querySelector("#overlay");

  function openMenu() {
    if (!asideMenu || !overlay) return;
    asideMenu.classList.remove("translate-x-full"); // Mueve hacia la vista
    overlay.classList.remove("hidden"); // Muestra el overlay
  }

  function closeMenu() {
    if (!asideMenu || !overlay) return;
    asideMenu.classList.add("translate-x-full"); // Mueve fuera de la vista
    overlay.classList.add("hidden"); // Oculta el overlay
  }

  if (asideMenu && overlay) {
    menuButton?.addEventListener("click", openMenu);
    closeButton?.addEventListener("click", closeMenu);
    overlay.addEventListener("click", closeMenu);
  }
</script>

<style>
  .hover-underline {
    position: relative;
    display: inline-block;
  }

  .hover-underline::after,
  .hover-underline::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 2px;
    background: linear-gradient(to right, #cde7f0, #5e42a6);
    bottom: -5px;
    left: 0;
    transform: scaleX(0);
    transform-origin: center;
    transition: transform 0.4s ease-out;
  }

  .hover-underline::before {
    top: -5px;
    transform-origin: center;
  }

  .hover-underline:hover::after,
  .hover-underline:hover::before {
    transform: scaleX(1);
  }
</style>
